include(CMakeFindDependencyMacro)
@CryptoCommitment_FIND_DEPENDENCY_CALLS@
include("${CMAKE_CURRENT_LIST_DIR}/@exported_targets_filename@")
message(STATUS "CryptoCommitment_DIR = ${CryptoCommitment_DIR}")
message(STATUS "CMAKE_INSTALL_PREFIX = ${CMAKE_INSTALL_PREFIX}")

@PACKAGE_INIT@
set_and_check(CryptoCommitment_INCLUDE_DIR  "${CMAKE_INSTALL_PREFIX}/include/safeheron")
set_and_check(CryptoCommitment_INCLUDE_DIRS "${CMAKE_INSTALL_PREFIX}/include/safeheron")
set_and_check(CryptoCommitment_LIBRARY_DIR "${CMAKE_INSTALL_PREFIX}/lib")

MESSAGE(STATUS "###################################")
MESSAGE(STATUS "operation system is ${CMAKE_SYSTEM}")

IF (CMAKE_SYSTEM_NAME MATCHES "Darwin")
    MESSAGE(STATUS "current platform: Darwin ")
    set_and_check(CryptoCommitment_LIBRARY "${CMAKE_INSTALL_PREFIX}/lib/libCryptoCommitment.dylib")
ELSEIF (CMAKE_SYSTEM_NAME MATCHES "Windows")
    MESSAGE(STATUS "current platform: Windows")
    set_and_check(CryptoCommitment_LIBRARY "${CMAKE_INSTALL_PREFIX}/lib/libCryptoCommitment.dll")
ELSE ()
    MESSAGE(STATUS "other platform: ${CMAKE_SYSTEM_NAME}")
    set_and_check(CryptoCommitment_LIBRARY "${CMAKE_INSTALL_PREFIX}/lib/libCryptoCommitment.so")
ENDIF (CMAKE_SYSTEM_NAME MATCHES "Darwin")

MESSAGE(STATUS "###################################")
